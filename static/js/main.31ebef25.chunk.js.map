{"version":3,"sources":["constants/index.js","components/PasswordGenerator.js","App.js","serviceWorker.js","index.js"],"names":["LETTERS","SYMBOLS","PasswordGenerator","props","_useState","useState","_useState2","Object","slicedToArray","password","setPassword","_useState3","length","_useState4","setLength","_useState5","digitCount","_useState6","setDigitCount","_useState7","symbolCount","_useState8","setSymbolCount","_useState9","_useState10","copy","setCopy","_useState11","_useState12","strengthScore","setStrengthScore","_useState13","_useState14","strengthText","setStrengthText","_useState15","maxLength","maxDigits","maxSymbols","_useState16","settings","useEffect","document","getElementById","addEventListener","copyToClipboard","removeEventListener","generatePassword","checkPasswordStrength","passwordArray","digitsPositionArray","i","push","upperCase","Math","round","random","randomLetter","toUpperCase","digit","numberIndex","randomDigitPosition","j","indexOf","splice","symbol","floor","symbolIndex","join","handleOnChange","e","name","value","target","count","excess","numbers","symbols","weight","combo","flatLower","flatNumber","charAt","match","score","copyText","textArea","createElement","textContent","body","appendChild","select","execCommand","remove","setTimeout","strengthFilled","copyValue","react_default","a","className","id","class","onClick","style","width","concat","type","min","max","disabled","onChange","defaultProps","App","components_PasswordGenerator","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31ebef25.chunk.js","sourcesContent":["export const LETTERS = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\r\nexport const SYMBOLS = [ \"=\",\"+\",\"-\",\"^\",\"?\",\"!\",\"%\",\"&\",\"*\",\"$\",\"#\",\"^\",\"@\",\"|\"];\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {LETTERS, SYMBOLS} from '../constants'\r\n\r\nfunction PasswordGenerator(props){\r\n    const [password, setPassword] = useState('')\r\n    const [length, setLength] = useState(props.length)\r\n    const [digitCount, setDigitCount] = useState(props.digitCount)\r\n    const [symbolCount, setSymbolCount] = useState(props.symbolCount)\r\n    const [copy, setCopy] = useState(false)\r\n    const [strengthScore, setStrengthScore] = useState(0)\r\n    const [strengthText, setStrengthText] = useState('')\r\n    const [settings, setSettings] = useState({\r\n        maxLength: props.maxLength,\r\n        maxDigits: props.maxDigits,\r\n        maxSymbols: props.maxSymbols,\r\n    })\r\n    useEffect(() => {\r\n        document.getElementById(\"copy_btn\").addEventListener(\"click\", copyToClipboard);\r\n        return () => {\r\n            document.getElementById(\"copy_btn\").removeEventListener(\"click\", copyToClipboard);\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        generatePassword()\r\n        checkPasswordStrength()\r\n    },[length, digitCount, symbolCount])\r\n    const generatePassword = () => {\r\n        let passwordArray = [];\r\n        let digitsPositionArray = [];\r\n        for(var i = 0; i < length; i++){\r\n            digitsPositionArray.push(i);\r\n            var upperCase = Math.round(Math.random() * 1);\r\n            if(upperCase === 0) {\r\n                passwordArray[i] = randomLetter().toUpperCase();\r\n            }\r\n            else {\r\n                passwordArray[i] = randomLetter();\r\n            }\r\n        }\r\n        for(i=0; i < digitCount; i++){\r\n            var digit = Math.round(Math.random() * 9);\r\n            var numberIndex = randomDigitPosition(digitsPositionArray);\r\n            passwordArray[numberIndex] =  digit;\r\n\r\n            let j = digitsPositionArray.indexOf(numberIndex);\r\n            if(i !== -1) {\r\n              digitsPositionArray.splice(j, 1);\r\n            }\r\n        }\r\n        for (i = 0; i < symbolCount; i++) {\r\n            var symbol = randomSymbol();\r\n            var symbolIndex = randomDigitPosition(digitsPositionArray);\r\n\r\n            passwordArray[symbolIndex] = symbol;\r\n            let j = digitsPositionArray.indexOf(symbolIndex);\r\n            if(i !== -1) {\r\n                digitsPositionArray.splice(j, 1);\r\n            }\r\n        }\r\n        setPassword(passwordArray.join(\"\"))\r\n    }\r\n    const handleOnChange = (e, name) => {\r\n        let value = e.target.value\r\n        if(name === 'length'){\r\n            setLength(value)\r\n        }else if(name === 'digits'){\r\n            setDigitCount(value)\r\n        }else if(name === 'symbols'){\r\n            setSymbolCount(value)\r\n        }\r\n    }\r\n    const checkPasswordStrength = () => {\r\n        var count = {\r\n            excess: 0,\r\n            upperCase: 0,\r\n            numbers: 0,\r\n            symbols: 0\r\n          };\r\n        var weight = {\r\n            excess: 3,\r\n            upperCase: 4,\r\n            numbers: 5,\r\n            symbols: 5,\r\n            combo: 0,\r\n            flatLower: 0,\r\n            flatNumber: 0\r\n        };\r\n\r\n        var baseScore = 30;\r\n        for (var i=0; i < password.length;i++){\r\n            if (password.charAt(i).match(/[A-Z]/g)) {count.upperCase++;}\r\n            if (password.charAt(i).match(/[0-9]/g)) {count.numbers++;}\r\n            if (password.charAt(i).match(/(.*[!,@,#,$,%,^,&,*,?,_,~])/)) {count.symbols++;}\r\n        }\r\n\r\n        count.excess = password.length - 6;\r\n        if (count.upperCase && count.numbers && count.symbols){\r\n            weight.combo = 25;\r\n        }else if ((count.upperCase && count.numbers) || (count.upperCase && count.symbols) || (count.numbers && count.symbols)){\r\n          weight.combo = 15;\r\n        }\r\n        if (password.match(/^[\\sa-z]+$/))\r\n          {\r\n              weight.flatLower = -30;\r\n        }\r\n        if (password.match(/^[\\s0-9]+$/)){\r\n            weight.flatNumber = -50;\r\n        }\r\n\r\n        var score =\r\n        baseScore +\r\n        (count.excess * weight.excess) +\r\n        (count.upperCase * weight.upperCase) +\r\n        (count.numbers * weight.numbers) +\r\n        (count.symbols * weight.symbols) +\r\n        weight.combo + weight.flatLower +\r\n        weight.flatNumber;\r\n\r\n      if(score < 30 ) {\r\n        setStrengthScore(10)\r\n        setStrengthText('weak')\r\n      }else if (score >= 30 && score < 75 ){\r\n        setStrengthScore(40)\r\n        setStrengthText('average')\r\n      }else if (score >= 75 && score < 150 ){\r\n        setStrengthScore(75)\r\n        setStrengthText('average')\r\n      }else {\r\n        setStrengthScore(100)\r\n        setStrengthText('secure')\r\n      }\r\n    }\r\n    const lengthThumbPosition = () => {\r\n        return (( (length - 6) / (settings.maxLength - 6)) * 100);\r\n    }\r\n    const digitsThumbPosition = () => {\r\n        return (( (digitCount - 0) / (settings.maxDigits - 0)) * 100);\r\n    }\r\n    const symbolsThumbPosition = () => {\r\n        return (( (symbolCount - 0) / (settings.maxSymbols - 0)) * 100);\r\n    }\r\n    const copyToClipboard = () => {\r\n        var copyText = document.getElementById(\"pwd_spn\");\r\n        var textArea = document.createElement(\"textarea\");\r\n        textArea.value = copyText.textContent;\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        document.execCommand(\"Copy\");\r\n        textArea.remove();\r\n        setCopy(true)\r\n        setTimeout(() => {\r\n            setCopy(false)\r\n        }, 900);\r\n    }\r\n    const { maxLength, maxDigits, maxSymbols } = settings\r\n    const strengthFilled = \"range-slider_wrapper slider-strength \" + strengthText\r\n    const copyValue = copy ? 'Copied!' : 'Copy'\r\n    return(\r\n        <div>\r\n            <div className='password-box'>\r\n                <span id=\"pwd_spn\" className=\"password\">{password}</span>\r\n                <span\r\n                    class=\"regenerate-password\"\r\n                    onClick={generatePassword}\r\n                >\r\n                </span>\r\n                {\r\n                    <button id=\"copy_btn\" onClick={copyToClipboard} class=\"copy-password\">{copyValue}</button>\r\n                }\r\n            </div>\r\n            <div className=\"field-wrap\">\r\n                <label>Strength</label>\r\n                <span className=\"range-value\">{strengthText}</span>\r\n                <div className={strengthFilled}>\r\n                    <span className=\"slider-bar\" style={{width: `${strengthScore}`+'%'}}></span>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        className=\"range-slider\"\r\n                        disabled=\"disabled\"\r\n                        value={strengthScore}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"seperator\"></div>\r\n            <div className=\"field-wrap\">\r\n                <label>Length</label>\r\n                <span className=\"range-value\">{length}</span>\r\n                <div className=\"range-slider_wrapper\">\r\n                    <span className=\"slider-bar\" style={{width: lengthThumbPosition()+'%'}}></span>\r\n                    <input\r\n                        id=\"length\"\r\n                        type=\"range\"\r\n                        min=\"6\"\r\n                        className=\"range-slider\"\r\n                        max={maxLength}\r\n                        value={length}\r\n                        onChange={(e) => handleOnChange(e, 'length')}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"field-wrap\">\r\n                <label>Digits</label>\r\n                <span className=\"range-value\">{digitCount}</span>\r\n                <div className=\"range-slider_wrapper\">\r\n                    <span class=\"slider-bar\" style={{width: digitsThumbPosition()+'%'}}></span>\r\n                    <input\r\n                        id=\"digits\"\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        className=\"range-slider\"\r\n                        max={maxDigits}\r\n                        value={digitCount}\r\n                        onChange={(e) => handleOnChange(e, 'digits')}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"field-wrap\">\r\n                <label>Symbols</label>\r\n                <span className=\"range-value\">{symbolCount}</span>\r\n                <div className=\"range-slider_wrapper\">\r\n                    <span class=\"slider-bar\" style={{width: symbolsThumbPosition()+'%'}}></span>\r\n                    <input\r\n                        id=\"symbols\"\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        className=\"range-slider\"\r\n                        max={maxSymbols}\r\n                        value={symbolCount}\r\n                        onChange={(e) => handleOnChange(e, 'symbols')}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction randomLetter(){\r\n    return LETTERS[Math.floor(Math.random()*LETTERS.length)]\r\n}\r\nfunction randomDigitPosition(digitsPositionArray){\r\n    return digitsPositionArray[Math.floor(Math.random()*digitsPositionArray.length)]\r\n}\r\nfunction randomSymbol(){\r\n    return SYMBOLS[Math.floor(Math.random()*SYMBOLS.length)]\r\n}\r\n\r\nPasswordGenerator.propTypes = {\r\n    length: PropTypes.number,\r\n    digitCount: PropTypes.number,\r\n    symbolCount: PropTypes.number,\r\n    maxLength: PropTypes.number,\r\n    maxDigits: PropTypes.number,\r\n    maxSymbols: PropTypes.number\r\n}\r\nPasswordGenerator.defaultProps = {\r\n    length: 30,\r\n    digitCount: 15,\r\n    symbolCount: 15,\r\n    maxLength: 60,\r\n    maxDigits: 30,\r\n    maxSymbols: 30\r\n}\r\nexport default PasswordGenerator;","import React, { Component } from 'react';\nimport './index.scss';\nimport PasswordGenerator from './components/PasswordGenerator'\n\nclass App extends Component {\n  render() {\n    return (\n      <section className=\"wrapper\">\n        <PasswordGenerator />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}